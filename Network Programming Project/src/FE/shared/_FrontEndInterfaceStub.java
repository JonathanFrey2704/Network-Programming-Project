package shared;


/**
* shared/_FrontEndInterfaceStub.java .
* Generated by the IDL-to-Java compiler (portable), version "3.2"
* from IDL.idl
* Wednesday, November 18, 2020 3:14:18 PM EST
*/

public class _FrontEndInterfaceStub extends org.omg.CORBA.portable.ObjectImpl implements shared.FrontEndInterface
{

  public String ReturnItem (String customerId, String itemId, String dateOfReturn)
  {
            org.omg.CORBA.portable.InputStream $in = null;
            try {
                org.omg.CORBA.portable.OutputStream $out = _request ("ReturnItem", true);
                $out.write_string (customerId);
                $out.write_string (itemId);
                $out.write_string (dateOfReturn);
                $in = _invoke ($out);
                String $result = $in.read_string ();
                return $result;
            } catch (org.omg.CORBA.portable.ApplicationException $ex) {
                $in = $ex.getInputStream ();
                String _id = $ex.getId ();
                throw new org.omg.CORBA.MARSHAL (_id);
            } catch (org.omg.CORBA.portable.RemarshalException $rm) {
                return ReturnItem (customerId, itemId, dateOfReturn        );
            } finally {
                _releaseReply ($in);
            }
  } // ReturnItem

  public String PurchaseItem (String customerId, String itemId, String dateOfPurchase)
  {
            org.omg.CORBA.portable.InputStream $in = null;
            try {
                org.omg.CORBA.portable.OutputStream $out = _request ("PurchaseItem", true);
                $out.write_string (customerId);
                $out.write_string (itemId);
                $out.write_string (dateOfPurchase);
                $in = _invoke ($out);
                String $result = $in.read_string ();
                return $result;
            } catch (org.omg.CORBA.portable.ApplicationException $ex) {
                $in = $ex.getInputStream ();
                String _id = $ex.getId ();
                throw new org.omg.CORBA.MARSHAL (_id);
            } catch (org.omg.CORBA.portable.RemarshalException $rm) {
                return PurchaseItem (customerId, itemId, dateOfPurchase        );
            } finally {
                _releaseReply ($in);
            }
  } // PurchaseItem

  public String[] FindItem (String customerId, String itemDescription)
  {
            org.omg.CORBA.portable.InputStream $in = null;
            try {
                org.omg.CORBA.portable.OutputStream $out = _request ("FindItem", true);
                $out.write_string (customerId);
                $out.write_string (itemDescription);
                $in = _invoke ($out);
                String $result[] = shared.FrontEndInterfacePackage.productsHelper.read ($in);
                return $result;
            } catch (org.omg.CORBA.portable.ApplicationException $ex) {
                $in = $ex.getInputStream ();
                String _id = $ex.getId ();
                throw new org.omg.CORBA.MARSHAL (_id);
            } catch (org.omg.CORBA.portable.RemarshalException $rm) {
                return FindItem (customerId, itemDescription        );
            } finally {
                _releaseReply ($in);
            }
  } // FindItem

  public String AddCustomerToWaitList (String itemId, String customerId)
  {
            org.omg.CORBA.portable.InputStream $in = null;
            try {
                org.omg.CORBA.portable.OutputStream $out = _request ("AddCustomerToWaitList", true);
                $out.write_string (itemId);
                $out.write_string (customerId);
                $in = _invoke ($out);
                String $result = $in.read_string ();
                return $result;
            } catch (org.omg.CORBA.portable.ApplicationException $ex) {
                $in = $ex.getInputStream ();
                String _id = $ex.getId ();
                throw new org.omg.CORBA.MARSHAL (_id);
            } catch (org.omg.CORBA.portable.RemarshalException $rm) {
                return AddCustomerToWaitList (itemId, customerId        );
            } finally {
                _releaseReply ($in);
            }
  } // AddCustomerToWaitList

  public String AddItem (String managerId, String itemId, String itemName, int quantity, double price)
  {
            org.omg.CORBA.portable.InputStream $in = null;
            try {
                org.omg.CORBA.portable.OutputStream $out = _request ("AddItem", true);
                $out.write_string (managerId);
                $out.write_string (itemId);
                $out.write_string (itemName);
                $out.write_long (quantity);
                $out.write_double (price);
                $in = _invoke ($out);
                String $result = $in.read_string ();
                return $result;
            } catch (org.omg.CORBA.portable.ApplicationException $ex) {
                $in = $ex.getInputStream ();
                String _id = $ex.getId ();
                throw new org.omg.CORBA.MARSHAL (_id);
            } catch (org.omg.CORBA.portable.RemarshalException $rm) {
                return AddItem (managerId, itemId, itemName, quantity, price        );
            } finally {
                _releaseReply ($in);
            }
  } // AddItem

  public String RemoveItem (String managerId, String itemId, int quantity)
  {
            org.omg.CORBA.portable.InputStream $in = null;
            try {
                org.omg.CORBA.portable.OutputStream $out = _request ("RemoveItem", true);
                $out.write_string (managerId);
                $out.write_string (itemId);
                $out.write_long (quantity);
                $in = _invoke ($out);
                String $result = $in.read_string ();
                return $result;
            } catch (org.omg.CORBA.portable.ApplicationException $ex) {
                $in = $ex.getInputStream ();
                String _id = $ex.getId ();
                throw new org.omg.CORBA.MARSHAL (_id);
            } catch (org.omg.CORBA.portable.RemarshalException $rm) {
                return RemoveItem (managerId, itemId, quantity        );
            } finally {
                _releaseReply ($in);
            }
  } // RemoveItem

  public String[] ListItemAvailability (String managerId)
  {
            org.omg.CORBA.portable.InputStream $in = null;
            try {
                org.omg.CORBA.portable.OutputStream $out = _request ("ListItemAvailability", true);
                $out.write_string (managerId);
                $in = _invoke ($out);
                String $result[] = shared.FrontEndInterfacePackage.productsHelper.read ($in);
                return $result;
            } catch (org.omg.CORBA.portable.ApplicationException $ex) {
                $in = $ex.getInputStream ();
                String _id = $ex.getId ();
                throw new org.omg.CORBA.MARSHAL (_id);
            } catch (org.omg.CORBA.portable.RemarshalException $rm) {
                return ListItemAvailability (managerId        );
            } finally {
                _releaseReply ($in);
            }
  } // ListItemAvailability

  public String exchangeItem (String customerId, String newItemId, String oldItemId, String dateOfReturn)
  {
            org.omg.CORBA.portable.InputStream $in = null;
            try {
                org.omg.CORBA.portable.OutputStream $out = _request ("exchangeItem", true);
                $out.write_string (customerId);
                $out.write_string (newItemId);
                $out.write_string (oldItemId);
                $out.write_string (dateOfReturn);
                $in = _invoke ($out);
                String $result = $in.read_string ();
                return $result;
            } catch (org.omg.CORBA.portable.ApplicationException $ex) {
                $in = $ex.getInputStream ();
                String _id = $ex.getId ();
                throw new org.omg.CORBA.MARSHAL (_id);
            } catch (org.omg.CORBA.portable.RemarshalException $rm) {
                return exchangeItem (customerId, newItemId, oldItemId, dateOfReturn        );
            } finally {
                _releaseReply ($in);
            }
  } // exchangeItem

  public void shutdown ()
  {
            org.omg.CORBA.portable.InputStream $in = null;
            try {
                org.omg.CORBA.portable.OutputStream $out = _request ("shutdown", false);
                $in = _invoke ($out);
                return;
            } catch (org.omg.CORBA.portable.ApplicationException $ex) {
                $in = $ex.getInputStream ();
                String _id = $ex.getId ();
                throw new org.omg.CORBA.MARSHAL (_id);
            } catch (org.omg.CORBA.portable.RemarshalException $rm) {
                shutdown (        );
            } finally {
                _releaseReply ($in);
            }
  } // shutdown

  // Type-specific CORBA::Object operations
  private static String[] __ids = {
    "IDL:shared/FrontEndInterface:1.0"};

  public String[] _ids ()
  {
    return (String[])__ids.clone ();
  }

  private void readObject (java.io.ObjectInputStream s) throws java.io.IOException
  {
     String str = s.readUTF ();
     String[] args = null;
     java.util.Properties props = null;
     org.omg.CORBA.ORB orb = org.omg.CORBA.ORB.init (args, props);
   try {
     org.omg.CORBA.Object obj = orb.string_to_object (str);
     org.omg.CORBA.portable.Delegate delegate = ((org.omg.CORBA.portable.ObjectImpl) obj)._get_delegate ();
     _set_delegate (delegate);
   } finally {
     orb.destroy() ;
   }
  }

  private void writeObject (java.io.ObjectOutputStream s) throws java.io.IOException
  {
     String[] args = null;
     java.util.Properties props = null;
     org.omg.CORBA.ORB orb = org.omg.CORBA.ORB.init (args, props);
   try {
     String str = orb.object_to_string (this);
     s.writeUTF (str);
   } finally {
     orb.destroy() ;
   }
  }
} // class _FrontEndInterfaceStub
